name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Build With Optimizations
        run: |
          # Install dependencies for build
          npm install
          
          # Create necessary environment variables
          echo "NEXT_TELEMETRY_DISABLED=1" > .env.local
          echo "NEXT_SWC_MINIFY=true" >> .env.local
          echo "NEXT_JS_IGNORE_ESLINT=1" >> .env.local
          echo "NEXT_JS_IGNORE_TYPECHECK=1" >> .env.local
          
          # Build the application
          npm run build
          
          # Prepare standalone build with minimal dependencies
          mkdir -p .next/standalone/public
          cp -r public/* .next/standalone/public/ || true
          mkdir -p .next/standalone/.next/static
          cp -r .next/static/* .next/standalone/.next/static/ || true
          
          # Generate a production-only package.json with minimal dependencies
          node -e '
          const fs = require("fs");
          const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
          const minimalPkg = {
            name: pkg.name,
            version: pkg.version,
            private: true,
            dependencies: {}
          };
          
          // Add core dependencies if they exist
          ["next", "react", "react-dom"].forEach(dep => {
            if (pkg.dependencies[dep]) {
              minimalPkg.dependencies[dep] = pkg.dependencies[dep];
            }
          });
          
          // Include essential UI and data packages only
          ["@radix-ui", "framer-motion", "lucide-react", "clsx", "tailwind-merge", "class-variance-authority"].forEach(pkgName => {
            Object.keys(pkg.dependencies || {}).forEach(dep => {
              if (dep.startsWith(pkgName)) {
                minimalPkg.dependencies[dep] = pkg.dependencies[dep];
              }
            });
          });
          
          minimalPkg.engines = { node: ">=18.0.0" };
          
          fs.writeFileSync(".next/standalone/package.json", JSON.stringify(minimalPkg, null, 2));
          console.log("Created minimal package.json");
          '
          
          # Clean up original node_modules completely and install only what's strictly needed
          cd .next/standalone
          rm -rf node_modules
          npm install --omit=dev --no-optional --no-audit --progress=false
          
          # Remove unnecessary files
          find node_modules -type d -name ".git" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type f -name "*.md" -delete || true
          find node_modules -type f -name "*.ts" -not -name "*.d.ts" -delete || true
          find node_modules -type d -name "docs" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name "examples" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name "test" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type f -path "*/bin/*" -not -name "*.js" -delete || true
          find . -name "*.map" -delete || true
          
          # Back to project root
          cd ../..
          
          # Output size details for verification
          echo "Final Size Information:"
          du -sh .next/standalone
          du -sh .next/standalone/node_modules
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WHITE_GLACIER_0599E9010 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ".next/standalone"
          api_location: ""
          output_location: ""
          skip_app_build: true

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WHITE_GLACIER_0599E9010 }}
          action: "close"
